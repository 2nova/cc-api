swagger: "2.0"
info:
  version: 1.0.0
  title: CG API
  description: ConceptGroup mobile applications API
  #termsOfService: http://swagger.io/terms/
  contact:
    name: 2Nova Team
    email: vad@2nova.ru
    url: http://2nova.ru
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: acoolakids.ru
basePath: /app
schemes:
  - https
consumes:
  - application/json
  - application/x-www-form-urlencoded
  - multipart/form-data
produces:
  - application/json

paths:
  /user/auth:
    post:
      description: Authenticate user with credentials
      operationId: userAuth
      parameters:
        - name: pet
          in: body
          description: Pet to add to the store
          required: true
          schema:
            $ref: '#/definitions/AuthRequest'
        # - name: credentials
        #   in: body
        #   required: true
        #   schema:
        #     $ref: '#/definitions/AuthRequest'
          # type: string
          # format: email
        # - name: password
        #   in: formData
        #   required: true
        #   type: string
          # format: password
      responses:
        201:
          description: success
          schema:
            $ref: '#/definitions/AuthResponse'
        401:
          description: auth error
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              error: api.auth.credentials.failed
              errno: 401
        422:
          description: form validation error
          schema:
            $ref: '#/definitions/FormError'
          examples:
            application/json:
                error: api.request.validation.failed
                errno: 0
                mapping:
                  password: 
                    - This value should not be blank.
        500:
           description: unexpected error
           schema:
             $ref: '#/definitions/Error'

definitions:
  UserModel:
    required:
      - id
      - firstName
      - lastName
      - middleName
      - isBlacklisted
      - isSubscribed
      - lastActivity
    properties:
      id:
        type: integer
        format: int32
        default: 100500
      firstName:
        type: string
        default: Vasya
      lastName:
        type: string
        default: Pupkin
      middleName:
        type: string
        default: ''
      isBlacklisted:
        type: boolean
      isSubscribed:
        type: boolean
      lastActivity:
        type: string
        format: date-time
        default: '2016-11-08T18:33:20+03:00'

  AuthModel:
    required:
      - token
    properties:
      token:
        description: JWT token
        type: string
        default: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJ1aWQiOjc3ODQ2LCJpYXQiOjE0Nzg2ODk2NzN9.hKYuKjA5KbXV27ibs_XgqN9fz9zow1xia1jmLHCwk4ItJ59Qti78BsquOoXZK6WmpoU2dJvyquhsu2svO-mNmA'

  AuthResponse:
    type: object
    required:
      - user
      - auth
    properties:
      user:
        $ref: '#/definitions/UserModel'
      auth:
        $ref: '#/definitions/AuthModel'

  AuthRequest:
    required:
      - email
      - password
    properties:
      email:
        type: string
        # format: email
        default: ask@me.ru
      password:
        type: string
        # format: password
        default: UsErPasSW0rDIsNOtEmpTy

  # HTTP 400+
  Error:
    required:
      - error
      - errno
    properties:
      error:
        type: string
      errno:
        type: integer
        format: int32
  # HTTP 422
  FormError:
    required:
      - error
      - errno
      - mapping
    properties:
      error:
        type: string
      errno:
        type: integer
        format: int32
        default: 0
      mapping:
        type: array